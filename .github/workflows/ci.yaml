name: CI/CD Pipeline

on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci

  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '22'
  #     - name: Install dependencies
  #       run: npm ci
  #     - name: Run tests with coverage
  #       run: npm run test:coverage
  #     - name: Upload coverage reports to Codecov
  #       uses: codecov/codecov-action@v3
  #       with:
  #         files: ./coverage/lcov.info
  #         flags: unittests
  #         name: codecov-umbrella
  #         fail_ci_if_error: true
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=cicd-testing
            -Dsonar.projectKey=Kaz01654_CICD
            -Dsonar.sources=app
            -Dsonar.tests=app/test
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.tsconfigPath=tsconfig.json
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**,**/public/**
            -Dsonar.test.inclusions=**/*.test.ts

  generate_git_tags:
    name: Generate Git Tags
    needs: [sonarcloud]
    # needs: [test, sonarcloud]
    runs-on: ubuntu-latest
    outputs:
      output_new_tag: ${{ steps.taggerFinal.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate Final Version
        id: taggerFinal
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
      - name: Echo New Tag
        run: |
          echo "The next new tag will be: ${{ steps.taggerFinal.outputs.new_tag }}"

  generate_git_release:
    needs: [test, sonarcloud, generate_git_tags]
    name: GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Release Action
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ needs.generate_git_tags.outputs.output_new_tag }}
          token: ${{ secrets.CHANGELOG_RELEASE }}